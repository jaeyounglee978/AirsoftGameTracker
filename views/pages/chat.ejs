<!doctype html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: 0.5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
    </style>
  </head>
  
  <script src="/socket.io/socket.io.js"></script>
  <script type="text/javascript" language="javascript">
    var socket = io();
    var userId = "<%= userId %>";
    var roomId = "<%= roomId %>";
    var players = "<%= JSON.stringify(players) %>";
    var teamName = "<%= teamName %>";

    console.log("htllllalsdflasfjlds")
    console.log(userId)
    console.log(roomId)
    console.log(players)
    console.log(teamName)

    var team1List = document.getElementById('TEAM_1');
    var team2List = document.getElementById('TEAM_2');

    function getTeamList(teamName) {
        if (teamName === 'TEAM_1')
          return team1List
        else if (teamName === 'TEAM_2')
        return team2List
    }

    function leaveChat() {
      socket.emit('leaveRoom', roomId, teamName, userId)
      window.location.href = 'http://localhost:3000/top'
    }

    function died() {
      socket.emit('leaveRoom', roomId, teamName, userId)
      return null
    }

    socket.emit('joinRoom', roomId, teamName, userId)

    socket.on('userJoin', (tn, ui) => {
      console.log(`Team.${tn}: user(${ui}) joined`)
      let list = getTeamList(tn)
      
      var newUserElem = document.createElement('li');
      newUserElem.setAttribute("id", ui)
      newUserElem.appendChild(document.createTextNode(`${ui} : WAITING`));
      list.appendChild(entry);
    });

    socket.on('userReady', (tn, ui) => {
      console.log(`Team.${tn}: user(${ui}) ready`)
      var entry = document.getElementById(ui);
      entry.childNodes[0].nodeValue = `${ui} : READY`
    });

    socket.on('userLeave', (tn, ui) => {
      var entry = document.getElementById(ui);
      entry.parentNode.removeChild(entry)
    });

    socket.on('userDied', (tn, ui) => {
      console.log(`Team.${tn}: user(${ui}) died X(`);

      var entry = document.getElementById(ui);
      entry.childNodes[0].nodeValue = `${ui} : DIED`
    });

    socket.on('gameEnd', function(tn){
      console.log(`Game Set! Team.${tn} lose`);
    });
  </script>
  <body>
    <ul id="TEAM_1"></ul>
    <ul id="TEAM_2`"></ul>
    <form action="">
      <input id="m" autocomplete="off" /><button>Send</button>
      <button onclick="leaveChat()">Leave</button>
      <button onclick="died()">KIA test</button>
    </form>
  </body>
</html>